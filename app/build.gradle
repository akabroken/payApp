plugins {
    id 'com.android.application'
}

// Load keystore properties safely
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file("keystore.properties")
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    println "Success: keystore.properties file found at ${keystorePropertiesFile.path}"
} else {
    println "Warning: keystore.properties file not found at ${keystorePropertiesFile.path}"
}

android {
    compileSdk 35
    namespace = "com.isw.payapp"
    defaultConfig {
        applicationId "com.isw.payapp"
        minSdk 26
        targetSdk 35
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }
        buildConfigField "String", "BASE_URL", "\"https://api.example.com/\""
        buildConfigField "boolean", "LOG_ENABLED", "true"
        buildConfigField "int", "TIMEOUT", "30"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    buildFeatures {
        viewBinding true
        buildConfig true
       dataBinding true
    }

    // Define signing configs for each flavor
    signingConfigs {
        telpo {
//            storeFile file("keystores/telpo.keystore")
//            storePassword keystoreProperties.getProperty('telpoStorePassword', '')
//            keyAlias keystoreProperties.getProperty('telpoKeyAlias', '')
//            keyPassword keystoreProperties.getProperty('telpoKeyPassword', '')
            storeFile file("keystores/mpos.keystore")
            storePassword keystoreProperties.getProperty('dspreadStorePassword', '')
            keyAlias keystoreProperties.getProperty('dspreadKeyAlias', '')
            keyPassword keystoreProperties.getProperty('dspreadKeyPassword', '')
            println "Success: dspread keystore properties loaded from keystore.properties"
        }
        pax {
//            storeFile file("keystores/pax.keystore")
//            storePassword keystoreProperties.getProperty('paxStorePassword', '')
//            keyAlias keystoreProperties.getProperty('paxKeyAlias', '')
//            keyPassword keystoreProperties.getProperty('paxKeyPassword', '')
        }
        dspread {
            storeFile file("keystores/mpos.keystore")
            storePassword keystoreProperties.getProperty('dspreadStorePassword', '')
            keyAlias keystoreProperties.getProperty('dspreadKeyAlias', '')
            keyPassword keystoreProperties.getProperty('dspreadKeyPassword', '')
        }
        feitian {
            storeFile file("keystores/ftdemo.jks")
            storePassword keystoreProperties.getProperty('feitianStorePassword', '')
            keyAlias keystoreProperties.getProperty('feitianKeyAlias', '')
            keyPassword keystoreProperties.getProperty('feitianKeyPassword', '')
        }
        castles {
//            storeFile file("keystores/castles.keystore")
//            storePassword keystoreProperties.getProperty('castlesStorePassword', '')
//            keyAlias keystoreProperties.getProperty('castlesKeyAlias', '')
//            keyPassword keystoreProperties.getProperty('castlesKeyPassword', '')
        }
    }

    flavorDimensions "pos"
    productFlavors {
        telpo {
            dimension "pos"
            buildConfigField "String", "POS_BRAND", "\"TELPO\""
            buildConfigField "String", "SDK_VERSION", "\"1.0.0\""
        }
        pax {
            dimension "pos"
            buildConfigField "String", "POS_BRAND", "\"PAX\""
        }
        dspread {
            dimension "pos"
            buildConfigField "String", "POS_BRAND", "\"DSPREAD\""
            buildConfigField "String", "SDK_VERSION", "\"7.4.8\""
        }
        feitian {
            dimension "pos"
            buildConfigField "String", "POS_BRAND", "\"FEITIAN\""
        }
        castles {
            dimension "pos"
            buildConfigField "String", "POS_BRAND", "\"CASTLES\""
            buildConfigField "String", "SDK_VERSION", "\"1.0.1\""
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // Apply signing config for each flavor
            productFlavors.all { flavor ->
                signingConfig signingConfigs."${flavor.name}"
            }
        }
        debug {
            // Optional: You can also apply signing configs for debug builds if needed
            productFlavors.all { flavor ->
                signingConfig signingConfigs."${flavor.name}"
            }
        }
    }

    packagingOptions {
        resources {
            excludes += ['/META-INF/*.license', 'META-INF/DEPENDENCIES']
        }
//        pickFirst 'android_serialport_api/SerialPort.class'
//        pickFirst 'android_serialport_api/SerialPortFinder.class'
//        pickFirst 'android_serialport_api/BuildConfig.class'
//        pickFirst '**/SerialPort.class'
//        pickFirst '**/SerialPortFinder.class'
//        pickFirst '**/lib/armeabi-v7a/*.so'
//        pickFirst '**/lib/arm64-v8a/*.so'
//        pickFirst '**/lib/x86/*.so'
//        pickFirst '**/lib/x86_64/*.so'
//        exclude 'META-INF/DEPENDENCIES'
//        exclude 'META-INF/LICENSE'
//        exclude 'META-INF/LICENSE.txt'
//        exclude 'META-INF/license.txt'
//        exclude 'META-INF/NOTICE'
//        exclude 'META-INF/NOTICE.txt'
//        exclude 'META-INF/notice.txt'
//        exclude 'META-INF/ASL2.0'
//        exclude 'META-INF/*.kotlin_module'
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.7.1'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
    implementation 'androidx.navigation:navigation-fragment:2.9.0'
    implementation 'androidx.navigation:navigation-ui:2.9.0'
    implementation 'androidx.gridlayout:gridlayout:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'

    implementation 'io.reactivex.rxjava2:rxjava:2.2.21'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation 'androidx.databinding:databinding-runtime:8.13.0'
    implementation 'androidx.activity:activity:1.10.1'

    // Network dependencies - make sure these are defined in your project's ext block
//    implementation 'rootProject.ext.dependencies.okhttp:4.12.0'
    // https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
    implementation("com.squareup.okhttp3:okhttp:5.1.0")
   // implementation 'rootProject.ext.dependencies.retrofit:2.9.0'
    // https://mvnrepository.com/artifact/com.squareup.retrofit2/retrofit
  //  implementation("com.squareup.retrofit2:retrofit:2.9.0")
    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'

    // Gson converter for Retrofit
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    // RxJava2 adapter for Retrofit
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'

    // RxJava2 (you already have these, but including for completeness)
    implementation 'io.reactivex.rxjava2:rxjava:2.2.21'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    // Gson (you already have this too)
    implementation 'com.google.code.gson:gson:2.13.1'

    telpoImplementation files('libs/telpo/telpo_api.jar')
    telpoImplementation files('libs/telpo/emv_pro4.0.jar')
    telpoImplementation files('libs/telpo/core-3.1.0.jar')

    //dspreadImplementation files('libs/d60/dspread_pos_sdk_7.6.4.aar')
    //dspreadImplementation files('libs/d60/dspread_print_sdk-1.7.2-beta.aar')
    //implementation 'com.dspread.print:dspread_print_sdk:1.5.5-beta'

    implementation 'com.dspread.library:dspread_pos_sdk:7.4.6'
    implementation 'com.dspread.print:dspread_print_sdk:1.3.5-beta'

    feitianImplementation files('libs/feitian/FTSDK_api_V1.0.1.15_20250306.jar')
    feitianImplementation files('libs/feitian/FTMDB_api_V1.0.0_20241017.jar')
    feitianImplementation files('libs/feitian/Logger_V1.00.03_20210811.jar')

    implementation files('libs/json-simple-1.1.1.jar')
    //implementation files('libs/Crypto_V1.00.03_20220812.jar')
    implementation files('libs/finger.jar')
    implementation files('libs/mvvmhabit-release.aar')
    implementation files('libs/SmartCardLib.jar')

    implementation 'com.github.bumptech.glide:glide:4.16.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.16.0'

    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

    implementation 'com.fasterxml.jackson.core:jackson-core:2.12.5'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.5'
    implementation 'com.google.code.gson:gson:2.13.1'

    implementation 'javax.xml.stream:stax-api:1.0-2'
    implementation 'com.fasterxml.woodstox:woodstox-core:6.2.6'

    implementation 'androidx.room:room-runtime:2.7.1'
    annotationProcessor 'androidx.room:room-compiler:2.7.1'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'


}